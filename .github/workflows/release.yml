name: Release (Portable)

on:
  push:
    branches: [ main ]
    tags:
      - app-v*
  workflow_dispatch:

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-release:
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, ubuntu-22.04]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20.4.x"
          cache: "yarn"

      # Linux GUI build deps for Tauri (still required even for portable "app" target)
      - name: Install Linux build deps
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev libwebkit2gtk-4.0-dev \
            libappindicator3-dev librsvg2-dev patchelf

      # Rust toolchain for Tauri backend
      - uses: dtolnay/rust-toolchain@stable

      # If you use Yarn Berry and Corepack, uncomment:
      # - run: corepack enable

      - name: Install JS deps
        run: yarn --immutable

      - name: Build workspace
        run: yarn build
        env:
          NODE_OPTIONS: --max-old-space-size=6000

      # Build Tauri app as **portable executables** and **disable updater**
      - name: Build Tauri App (portable, no updater)
        id: tauri
        uses: tauri-apps/tauri-action@v0
        with:
          projectPath: packages/app
          tauriScript: yarn tauri
          # Force portable binaries and disable updater (no keys needed)
          args: >-
            --verbose
            --config '{ "tauri": { "updater": { "active": false }, "bundle": { "targets": ["app"] } } }'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_OPTIONS: --max-old-space-size=6000

      # Upload the raw executables from target/**/release (works for both OSes)
      - name: Upload portable artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rivet-tauri-${{ matrix.platform }}-portable
          path: |
            packages/app/src-tauri/target/**/release/*.exe
            packages/app/src-tauri/target/**/release/*
          if-no-files-found: warn

      # On tag builds (e.g., app-v1.2.3), create a GitHub Release and attach the same artifacts
      - name: Publish GitHub Release (attach portable binaries)
        if: startsWith(github.ref, 'refs/tags/app-v')
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          name: Rivet IDE ${{ github.ref_name }}
          body: |
            Portable builds (no installer). Download the asset for your platform.
          files: |
            packages/app/src-tauri/target/**/release/*.exe
            packages/app/src-tauri/target/**/release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
