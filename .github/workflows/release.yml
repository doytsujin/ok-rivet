name: Release

on:
  push:
    branches: [ main ]
    tags:
      - app-v*
  workflow_dispatch:

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-release:
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, ubuntu-22.04]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20.4.x"
          cache: "yarn"

      # Linux deps for Tauri
      - name: Install Linux build deps
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev libwebkit2gtk-4.0-dev \
            libappindicator3-dev librsvg2-dev patchelf

      # Windows deps for Tauri installer
      - name: Install Windows build deps
        if: matrix.platform == 'windows-latest'
        run: choco install nsis -y

      # Rust for Tauri backend
      - uses: dtolnay/rust-toolchain@stable

      - name: Install JS deps
        run: yarn --immutable

      - name: Build workspace
        run: yarn build
        env:
          NODE_OPTIONS: --max-old-space-size=6000

      # Build the desktop app
      # - On tag refs (app-v*), this will also create/update a GitHub Release and upload assets
      # - On normal runs, it just builds the app; we upload artifacts in the next step
      - name: Build Tauri App
        id: tauri
        uses: tauri-apps/tauri-action@v0
        with:
          projectPath: packages/app
          tauriScript: yarn tauri
          tagName: app-v__VERSION__
          releaseName: 'Rivet IDE v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: ${{ startsWith(github.ref, 'refs/tags/app-v') }}
          prerelease: false
          updaterJsonKeepUniversal: true
          args: --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_OPTIONS: --max-old-space-size=6000

      # Always upload the built bundles as run artifacts (handy for main & manual runs).
      # Tauri bundles end up under packages/app/src-tauri/target/**/bundle/
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rivet-tauri-${{ matrix.platform }}
          path: |
            packages/app/src-tauri/target/**/bundle/**/*
          if-no-files-found: warn
